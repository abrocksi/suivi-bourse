{
  "__requires": [
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "8.0.6"
    },
    {
      "type": "datasource",
      "id": "influxdb",
      "name": "InfluxDB",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "stat",
      "name": "Stat",
      "version": ""
    },
    {
      "type": "panel",
      "id": "timeseries",
      "name": "Time series",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "description": "Watch the price of the stock shares you own. For more detail : https://github.com/pbrissaud/suivi-bourse-app",
  "editable": true,
  "gnetId": null,
  "graphTooltip": 0,
  "id": null,
  "iteration": 1627908085821,
  "links": [],
  "panels": [
    {
      "datasource": null,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 2,
      "panels": [],
      "repeat": "share",
      "title": "$share",
      "type": "row"
    },
    {
      "datasource": "InfluxDB",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "graph": false,
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "currencyEUR"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Share mean price on 5min"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "blue",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.lineWidth",
                "value": 4
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Share max price on 5min"
            },
            "properties": [
              {
                "id": "custom.fillBelowTo",
                "value": "Share min price on 5min"
              },
              {
                "id": "custom.lineWidth",
                "value": 0
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "light-orange",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.fillBelowTo",
                "value": "Share min price on 5min"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Share min price on 5min"
            },
            "properties": [
              {
                "id": "custom.lineWidth",
                "value": 0
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "light-orange",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 12,
        "w": 12,
        "x": 0,
        "y": 1
      },
      "id": 4,
      "options": {
        "graph": {},
        "legend": {
          "calcs": [],
          "displayMode": "hidden",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "pluginVersion": "7.4.2",
      "targets": [
        {
          "alias": "Share mean price on 5min",
          "groupBy": [
            {
              "params": [
                "5m"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "price",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\n\nRawSeries = from(bucket: \"bourse\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"price\")\n  |> filter(fn: (r) => r[\"_field\"] == \"amount\")\n  |> filter(fn: (r) => r[\"name\"] == \"${share}\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n\nNamedSeries = RawSeries\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Share mean price on 5min\"}))\n  |> keep(columns:FinalOutput)\n\nNamedSeries |> yield()",
          "queryType": "randomWalk",
          "refId": "mean",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "amount"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [
            {
              "key": "name",
              "operator": "=~",
              "value": "/^$share$/"
            }
          ]
        }
      ],
      "title": "Share price evolution",
      "type": "timeseries"
    },
    {
      "datasource": "InfluxDB",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "blue",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 12,
        "y": 1
      },
      "id": 8,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "8.0.6",
      "targets": [
        {
          "groupBy": [],
          "measurement": "purchase",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"bourse\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"purchase\")\n  |> filter(fn: (r) => r[\"_field\"] == \"quantity\")\n  |> filter(fn: (r) => r[\"name\"] == \"${share}\" )\n  |> last()",
          "queryType": "randomWalk",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "quantity"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "name",
              "operator": "=~",
              "value": "/^$share$/"
            }
          ]
        }
      ],
      "title": "Purchased quantity",
      "type": "stat"
    },
    {
      "datasource": "InfluxDB",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "blue",
                "value": null
              }
            ]
          },
          "unit": "currencyEUR"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 16,
        "y": 1
      },
      "id": 9,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "8.0.6",
      "targets": [
        {
          "groupBy": [],
          "measurement": "purchase",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"bourse\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"purchase\")\n  |> filter(fn: (r) => r[\"_field\"] == \"cost_price\")\n  |> filter(fn: (r) => r[\"name\"] == \"${share}\" )\n  |> last()",
          "queryType": "randomWalk",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "cost_price"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "name",
              "operator": "=~",
              "value": "/^$share$/"
            }
          ]
        }
      ],
      "title": "Cost price",
      "type": "stat"
    },
    {
      "datasource": "InfluxDB",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "blue",
                "value": null
              }
            ]
          },
          "unit": "currencyEUR"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 20,
        "y": 1
      },
      "id": 10,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "8.0.6",
      "targets": [
        {
          "groupBy": [],
          "measurement": "purchase",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"bourse\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"purchase\")\n  |> filter(fn: (r) => r[\"_field\"] == \"fee\")\n  |> filter(fn: (r) => r[\"name\"] == \"${share}\" )\n  |> last()",
          "queryType": "randomWalk",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "fee"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "name",
              "operator": "=~",
              "value": "/^$share$/"
            }
          ]
        }
      ],
      "title": "Fees",
      "type": "stat"
    },
    {
      "datasource": "InfluxDB",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "blue",
                "value": null
              }
            ]
          },
          "unit": "currencyEUR"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 6,
        "x": 12,
        "y": 5
      },
      "id": 11,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "8.0.6",
      "targets": [
        {
          "groupBy": [],
          "measurement": "price",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"bourse\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"price\")\n  |> filter(fn: (r) => r[\"_field\"] == \"amount\")\n  |> filter(fn: (r) => r[\"name\"] == \"${share}\")\n  |> last()\n",
          "queryType": "randomWalk",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "amount"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "name",
              "operator": "=~",
              "value": "/^$share$/"
            }
          ]
        }
      ],
      "title": "Actual price",
      "type": "stat"
    },
    {
      "datasource": "InfluxDB",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "red",
                "value": null
              },
              {
                "color": "#EAB839",
                "value": 0
              },
              {
                "color": "green",
                "value": 0.01
              }
            ]
          },
          "unit": "currencyEUR"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 6,
        "x": 18,
        "y": 5
      },
      "id": 12,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "8.0.6",
      "targets": [
        {
          "alias": "actual",
          "groupBy": [],
          "measurement": "price",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "actual = from(bucket: \"bourse\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"price\")\n  |> filter(fn: (r) => r[\"_field\"] == \"amount\")\n  |> filter(fn: (r) => r[\"name\"] == \"${share}\")\n  |> last()\n\ncost = from(bucket: \"bourse\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"purchase\")\n  |> filter(fn: (r) => r[\"_field\"] == \"cost_price\")\n  |> filter(fn: (r) => r[\"name\"] == \"${share}\" )\n  |> last()\n\njoin(tables: {cost:cost, actual:actual}, on: [\"_time\", \"_stop\",\"_start\"])\n|> map(fn: (r) => ({\n    _time: r._time,\n    _value: (r._value_actual - r._value_cost)\n}))",
          "queryType": "randomWalk",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "amount"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "name",
              "operator": "=~",
              "value": "/^$share$/"
            }
          ]
        }
      ],
      "title": "Unitary Gain / Loss ",
      "transformations": [],
      "type": "stat"
    },
    {
      "datasource": "InfluxDB",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "blue",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 12,
        "y": 9
      },
      "id": 6,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "8.0.6",
      "targets": [
        {
          "groupBy": [],
          "measurement": "estate",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"bourse\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"estate\")\n  |> filter(fn: (r) => r[\"_field\"] == \"quantity\")\n  |> filter(fn: (r) => r[\"name\"] == \"${share}\" )\n  |> last()",
          "queryType": "randomWalk",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "quantity"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "name",
              "operator": "=~",
              "value": "/^$share$/"
            }
          ]
        }
      ],
      "title": "Owned quantity",
      "type": "stat"
    },
    {
      "datasource": "InfluxDB",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "blue",
                "value": null
              }
            ]
          },
          "unit": "currencyEUR"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 16,
        "y": 9
      },
      "id": 13,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "8.0.6",
      "targets": [
        {
          "groupBy": [],
          "measurement": "estate",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"bourse\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"estate\")\n  |> filter(fn: (r) => r[\"_field\"] == \"received_dividend\")\n  |> filter(fn: (r) => r[\"name\"] == \"${share}\" )\n  |> last()",
          "queryType": "randomWalk",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "received_dividend"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "name",
              "operator": "=~",
              "value": "/^$share$/"
            }
          ]
        }
      ],
      "title": "Received dividend",
      "type": "stat"
    },
    {
      "datasource": "InfluxDB",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "red",
                "value": null
              },
              {
                "color": "#EAB839",
                "value": 0
              },
              {
                "color": "green",
                "value": 0.01
              }
            ]
          },
          "unit": "currencyEUR"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 20,
        "y": 9
      },
      "id": 14,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "8.0.6",
      "targets": [
        {
          "alias": "actual_price",
          "groupBy": [],
          "measurement": "price",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "cost_price = from(bucket: \"bourse\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"purchase\")\n  |> filter(fn: (r) => r[\"_field\"] == \"cost_price\")\n  |> filter(fn: (r) => r[\"name\"] == \"${share}\" )\n  |> last()\n\npurchase_quantity = from(bucket: \"bourse\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"purchase\")\n  |> filter(fn: (r) => r[\"_field\"] == \"quantity\")\n  |> filter(fn: (r) => r[\"name\"] == \"${share}\" )\n  |> last()\n\npurchase_value = join(tables: {cost_price:cost_price, purchase_quantity:purchase_quantity}, on: [\"_time\", \"_stop\",\"_start\"])\n|> map(fn: (r) => ({\n    _time: r._time,\n    _value: (r._value_purchase_quantity * r._value_cost_price)\n}))\n\nprice = from(bucket: \"bourse\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"price\")\n  |> filter(fn: (r) => r[\"_field\"] == \"amount\")\n  |> filter(fn: (r) => r[\"name\"] == \"${share}\")\n  |> last()\n\nactual_quantity = from(bucket: \"bourse\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"estate\")\n  |> filter(fn: (r) => r[\"_field\"] == \"quantity\")\n  |> filter(fn: (r) => r[\"name\"] == \"${share}\" )\n  |> last()\n\nactual_value = join(tables: {price:price, actual_quantity:actual_quantity}, on: [\"_time\", \"_stop\",\"_start\"])\n|> map(fn: (r) => ({\n    _time: r._time,\n    _value: (r._value_actual_quantity * r._value_price)\n}))\n\ndelta = join(tables: {actual_value:actual_value, purchase_value:purchase_value}, on: [\"_time\"])\n  |> map(fn: (r) => ({\n    _time: r._time,\n    _value: (r._value_actual_value - r._value_purchase_value)\n}))\n\nfees = from(bucket: \"bourse\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"purchase\")\n  |> filter(fn: (r) => r[\"_field\"] == \"fee\")\n  |> filter(fn: (r) => r[\"name\"] == \"${share}\" )\n  |> last()\n\ndelta_fees = join(tables: {delta:delta, fees:fees}, on: [\"_time\"])\n  |> map(fn: (r) => ({\n    _time: r._time,\n    _value: (r._value_delta - r._value_fees)\n}))\n\ndividend = from(bucket: \"bourse\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"estate\")\n  |> filter(fn: (r) => r[\"_field\"] == \"received_dividend\")\n  |> filter(fn: (r) => r[\"name\"] == \"${share}\" )\n  |> last()\n\njoin(tables: {delta_fees:delta_fees, dividend:dividend}, on: [\"_time\"])\n  |> map(fn: (r) => ({\n    _time: r._time,\n    _value: (r._value_delta_fees + r._value_dividend)\n}))",
          "queryType": "randomWalk",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "amount"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "name",
              "operator": "=~",
              "value": "/^$share$/"
            }
          ]
        }
      ],
      "title": "Total gain / loss",
      "transformations": [],
      "type": "stat"
    }
  ],
  "refresh": "30s",
  "schemaVersion": 30,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "allValue": null,
        "current": {},
        "datasource": "InfluxDB",
        "definition": "import \"influxdata/influxdb/v1\"\n\nv1.measurementTagValues(bucket: \"bourse\", measurement: \"estate\", tag: \"name\")",
        "description": null,
        "error": null,
        "hide": 0,
        "includeAll": true,
        "label": "Share",
        "multi": false,
        "name": "share",
        "options": [],
        "query": "import \"influxdata/influxdb/v1\"\n\nv1.measurementTagValues(bucket: \"bourse\", measurement: \"estate\", tag: \"name\")",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      }
    ]
  },
  "time": {
    "from": "now-3h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Stock share monitoring",
  "uid": "yxyFeYUGk",
  "version": 2
}